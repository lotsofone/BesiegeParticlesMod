<Block>
    <Debug>True</Debug>
    <ID>10</ID>
    <Name>Retro Effect</Name>
    <Mass>0.01</Mass>
    <SearchKeywords>
        <Keyword>Particle</Keyword>
    </SearchKeywords>
    <Script>lto_particle.RetroEffectBlockScript</Script>
    <!-- <CanFlip>true</CanFlip> -->
    <!-- <Fallback>Rocket</Fallback> -->
    <!-- <Script>Full Name of a BlockScript class, optional.</Script> --> 
    <Modules>
    </Modules>
    <!-- <Health>20</Health> -->
    <!-- <KeepWhenStripped>        <Object>SomeObjectName</Object>    </KeepWhenStripped> -->
    <!-- <FireInteraction burnDuration="5">
        <SphereTrigger>
            <Position x="0" y="0" z="0.61" />
            <Radius>1.5</Radius>
        </SphereTrigger>
    </FireInteraction> -->
    <!-- <IceInteraction /> -->
    <!-- Optionally specify type of damage done to entities.         Can be one of "Blunt", "Sharp", "Fire" -->    <!-- <DamageType>Blunt</DamageType> -->
    <Mesh name="ParticleBlockMesh">
        <Position x="0.0" y="0.0" z="0.5" />
        <Rotation x="0.0" y="180" z="0.0" />
        <Scale x="0.5" y="0.5" z="0.5" />
    </Mesh>
    <Texture name="ParticleBlock/Retro" />
    <!-- Must be defined as a resource in the manifest. -->
    <Icon>
        <Position x="0.0" y="0.0" z="-1" />
        <Rotation x="0.0" y="0.0" z="0.0" />
		<Scale x="0.5" y="0.5" z="0.5" />
    </Icon>
    <!-- Including this causes a direction arrow, like the one on wheels and other turnable blocks,         to be displayed. The child elements define how and where it is displayed. -->
    <!--<Arrow>
        <Position x="0" y="0" z="0" />
        <Rotation x="0" y="0" z="0" />
        <Scale x="1" y="1" z="1" />
    </Arrow>-->
    <!-- Optional. Both child elements are optional. Hammer can 
    be used to specify the position and rotation of the end of 
    the nail at the start of the hammer animation.         
    Colliders can be used to specify a different set of 
    colliders to use for the ghost.         If it is not 
    present, the colliders of the normal block will be used. 
    It is also possible to specify ignoreForGhost attributes for
    some of the normal colliders to use the normal set of 
    colliders with a few of them removed on the ghost.
    If the Colliders element here is present, all
    ignoreForGhost attributes are ignored. -->
    <!-- <Ghost>
        <Hammer>
            <Position x="0" y="0" z="0.8" />
            <Rotation x="0" y="0" z="0" />
        </Hammer>
        <Colliders>
            <BoxCollider>
                <Position x="0.0" y="0.0" z="0.0" />
                <Rotation x="0.0" y="0.0" z="0.0" />
                <Scale x="1.0" y="1.0" z="1.0" />
            </BoxCollider>
        </Colliders>
    </Ghost> -->
    <Colliders>
        <BoxCollider>
            <Position x="0.0" y="0.0" z="0.5" />
            <Rotation x="0.0" y="0.0" z="0.0" />
            <Scale x="0.0" y="0.0" z="0.0" />
        </BoxCollider>
        <!--SphereCollider>
            <Position x="0.0" y="0.0" z="0.0" />
            <Radius>1.0</Radius>
        </SphereCollider>
        <CapsuleCollider>
            <Position x="0.0" y="0.0" z="0.0" />
            <Rotation x="0.0" y="0.0" z="0.0" />
            <Capsule direction="X" radius="1.0" height="2.0" />
        </CapsuleCollider-->
    </Colliders>
    <ModuleMapperTypes>
        <!-- <Key displayName="按键" key="lto_Key" default="P" /> -->
        <!-- <Vector3 displayName="按键2" key="Ke22y" /> -->
        <!-- <Toggle displayName="按住发射" key="lto_HoldMode" default="false" /> -->
        <!-- <Slider displayName="粒子号" key="lto_ParticleID" min="0" max="10" default="0.0" unclamped="true" /> -->
    </ModuleMapperTypes>
    <BasePoint hasAddingPoint="false">
        <Stickiness enabled="true" radius="0.6" />
        <Motion x="false" y="false" z="false" />
    </BasePoint>
    <AddingPoints>
        <AddingPoint>
            <Position x="0.0" y="0.0" z="0.5" />
            <Rotation x="0.0" y="0.0" z="0.0" />
            <Stickiness enabled="false" radius="0.3"/>
        </AddingPoint>
    </AddingPoints>
</Block>